// This file is auto-generated by @hey-api/openapi-ts

export type BodyCreateEpisodeV1EpisodesPost = {
    files: Array<Blob | File>;
    /**
     * Episode title
     */
    title?: string;
};

/**
 * Main episode model containing metadata and relationships to related resources
 */
export type Episode = {
    uuid?: string;
    preprocess_status?: JobStatus;
    postprocess_status?: JobStatus;
    metadata_generation_status?: JobStatus;
    editor_state?: string;
    title?: string;
    created_at?: string;
    updated_at?: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

/**
 * Enum for processing job status
 */
export type JobStatus = 'init' | 'pending' | 'processing' | 'completed' | 'failed';

/**
 * Model for updating an existing episode
 */
export type UpdateEpisodeRequest = {
    title?: string | null;
    editor_state?: string | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type ReadEpisodesV1EpisodesGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Offset the number of episodes returned
         */
        offset?: number;
        /**
         * Limit the number of episodes returned
         */
        limit?: number;
    };
    url: '/v1/episodes/';
};

export type ReadEpisodesV1EpisodesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadEpisodesV1EpisodesGetError = ReadEpisodesV1EpisodesGetErrors[keyof ReadEpisodesV1EpisodesGetErrors];

export type ReadEpisodesV1EpisodesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Episode>;
};

export type ReadEpisodesV1EpisodesGetResponse = ReadEpisodesV1EpisodesGetResponses[keyof ReadEpisodesV1EpisodesGetResponses];

export type CreateEpisodeV1EpisodesPostData = {
    body: BodyCreateEpisodeV1EpisodesPost;
    path?: never;
    query?: never;
    url: '/v1/episodes/';
};

export type CreateEpisodeV1EpisodesPostErrors = {
    /**
     * No file name provided
     */
    400: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal server error
     */
    500: unknown;
};

export type CreateEpisodeV1EpisodesPostError = CreateEpisodeV1EpisodesPostErrors[keyof CreateEpisodeV1EpisodesPostErrors];

export type CreateEpisodeV1EpisodesPostResponses = {
    /**
     * Successful Response
     */
    201: Episode;
};

export type CreateEpisodeV1EpisodesPostResponse = CreateEpisodeV1EpisodesPostResponses[keyof CreateEpisodeV1EpisodesPostResponses];

export type DeleteEpisodeV1EpisodesEpisodeIdDeleteData = {
    body?: never;
    path: {
        episode_id: string;
    };
    query?: never;
    url: '/v1/episodes/{episode_id}';
};

export type DeleteEpisodeV1EpisodesEpisodeIdDeleteErrors = {
    /**
     * Episode not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteEpisodeV1EpisodesEpisodeIdDeleteError = DeleteEpisodeV1EpisodesEpisodeIdDeleteErrors[keyof DeleteEpisodeV1EpisodesEpisodeIdDeleteErrors];

export type DeleteEpisodeV1EpisodesEpisodeIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteEpisodeV1EpisodesEpisodeIdDeleteResponse = DeleteEpisodeV1EpisodesEpisodeIdDeleteResponses[keyof DeleteEpisodeV1EpisodesEpisodeIdDeleteResponses];

export type UpdateEpisodeV1EpisodesEpisodeIdPatchData = {
    body: UpdateEpisodeRequest;
    path: {
        episode_id: string;
    };
    query?: never;
    url: '/v1/episodes/{episode_id}';
};

export type UpdateEpisodeV1EpisodesEpisodeIdPatchErrors = {
    /**
     * Episode not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateEpisodeV1EpisodesEpisodeIdPatchError = UpdateEpisodeV1EpisodesEpisodeIdPatchErrors[keyof UpdateEpisodeV1EpisodesEpisodeIdPatchErrors];

export type UpdateEpisodeV1EpisodesEpisodeIdPatchResponses = {
    /**
     * Successful Response
     */
    200: Episode;
};

export type UpdateEpisodeV1EpisodesEpisodeIdPatchResponse = UpdateEpisodeV1EpisodesEpisodeIdPatchResponses[keyof UpdateEpisodeV1EpisodesEpisodeIdPatchResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};